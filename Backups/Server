import anvil.files
from anvil.files import data_files
import time
import anvil.users
import anvil.server
import json

def _jsonify(x):
  return json.loads(json.dumps(x, default=str))

def _is_pdf(media):
  if not media: return False
  ct = (getattr(media, "content_type", "") or "").lower()
  name = (getattr(media, "name", "") or "").lower()
  return ("pdf" in ct) or name.endswith(".pdf")

@anvil.server.callable(require_user=True)
def submit_for_detection(file, ui_overrides=None, **kwargs):
  if not _is_pdf(file):
    raise anvil.server.ExecutionError("PDFs only")
  job_note = kwargs.get("job_note")
  out = anvil.server.call("vm_submit_for_detection", file, ui_overrides or {}, job_note)
  return _jsonify(out)

@anvil.server.callable(require_user=True)
def get_job_status(job_id):
  # Always ask the VM (reads disk). Keep it short so UI stays snappy.
  try:
    out = anvil.server.call("vm_get_job_status", job_id)
    return json.loads(json.dumps(out, default=str))
  except Exception as e:
    # Soft error to keep the client timer polling
    return {"state": "error", "error": f"Status unavailable: {type(e).__name__}: {e}"}
